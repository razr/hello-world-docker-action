# This is a workflow for the VxWorks ROS 2 build.
# It builds a ROS 2 VxWorks port against the VxWorks SDK 
#
# The workflow can be started 
#  - manually

name: 'JSON file as a param'

on:
  workflow_dispatch:
    inputs:
      json_file_name:
        description: 'Name of the JSON file'
        required: true
        default: 'jsonfile-param-a.json'
jobs:
  build:
    strategy:
      matrix:
        ros_distro: [humble, iron, rolling]

    runs-on: ubuntu-22.04
    env:
      JSON_FILE: ${{ github.event.inputs.json_file_name }}
    continue-on-error: true
    steps:

      - name: Checks-out a branch ${{ github.ref }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Fetch SDK name
        run: |
          sdk=$(jq -r --arg distro "${{ matrix.ros_distro }}" '.vxros2build[] | select(.ros_distro == $distro) | .sdk' .github/workflows/${{ github.event.inputs.json_file_name }})
          if [ -z "$sdk" ]; then
            echo "SDK not found for ${{ matrix.ros_distro }}. Stopping workflow."
            echo "::error::SDK not found for ${{ matrix.ros_distro }}"
            exit 1
          fi
          echo "sdk=$sdk" >> $GITHUB_ENV

      - name: Fetch SDK details
        run: |
          url=$(jq -r --arg sdk "$sdk" '.sdks[] | select(.name == $sdk) | .url' .github/workflows/sdks.json)
          script=$(jq -r --arg sdk "$sdk" '.sdks[] | select(.name == $sdk) | .script' .github/workflows/sdks.json)
          image=$(jq -r --arg sdk "$sdk" '.sdks[] | select(.name == $sdk) | .image' .github/workflows/sdks.json)
          echo "url=$url" >> $GITHUB_ENV
          echo "script=$script" >> $GITHUB_ENV
          echo "image=$image" >> $GITHUB_ENV
          echo "ros_distro=${{ matrix.ros_distro }}" >> $GITHUB_ENV

      - name: Download the ${{ matrix.sdk }} SDK
        uses: carlosperate/download-file-action@v1
        with:
          file-url: '${{ env.url }}'
          location: '/tmp'
