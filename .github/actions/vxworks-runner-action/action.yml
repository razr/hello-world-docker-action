name: 'VxWorks runner'
description: 'Composite action to run commands within a QEMU VxWorks environment'
inputs:
  sdk:
    description: 'SDK Name'
    required: false
    default: 'qemu'
  vxworks:
    description: 'VxWorks Release'
    required: false
    default: '24.03'
  directory:
    description: 'Directory to download and extract VxWorks'
    required: false
    default: '/tmp'
  commands:
    description: 'Commands to run in the image, executed with a command interpreter'
    required: true
    default: 'C version'
  debug:
    description: 'Display commands as they are executed'
    required: false
    default: 'yes'
runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      id: install-dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jsonschema
      shell: bash

    - name: Calculate SDK URL
      id: calculate-url
      run: |
        cd $GITHUB_ACTION_PATH
        python ./parse_wrsdks.py wrsdks.json ${{ inputs.sdk }} ${{ inputs.vxworks }} > ${{ inputs.directory }}/sdk-url.txt
        cd ${{ inputs.directory }}
        echo SDK_URL=$(cat sdk-url.txt) >> $GITHUB_ENV
        echo FILENAME=$(basename $(cat sdk-url.txt)) >> $GITHUB_ENV
      shell: bash

    - name: Download SDK
      id: download-sdk
      run: |
        if [ ! -f "${{ inputs.directory }}/${{ env.FILENAME }}" ]; then
          wget --no-check-certificate ${{ env.SDK_URL }} -P ${{ inputs.directory }}
        else
          echo "SDK ${{ env.FILENAME }} already downloaded."
        fi
      shell: bash

    - name: Extract VxWorks
      id: extract-vxworks
      run: |
        if [ ! -f "${{ inputs.directory }}/vxWorks" ]; then
          VXWORKS_PATH=$(tar -tvjf ${{ inputs.directory }}/${{ env.FILENAME }} | awk '{print $6}' | grep 'vxsdk/bsps/.*/vxWorks')
          tar -xvjf ${{ inputs.directory }}/${{ env.FILENAME }} --strip-components=4 -C ${{ inputs.directory }} "$VXWORKS_PATH"
          ls -la ${{ inputs.directory }}/vxWorks
        else
          echo "VxWorks already extracted."
        fi
      shell: bash

    - name: Install QEMU
      id: install-qemu
      run: |
        case "${{ inputs.sdk }}" in
          qemu)
            sudo apt-get update && sudo apt-get install -y qemu-system-x86_64
            echo "QEMU_RUN=qemu-system-x86_64 -m 2G -machine q35 -cpu Nehalem -kernel ${{ inputs.directory }}/vxWorks -display none -serial mon:stdio" >> $GITHUB_ENV
          ;;
          raspberrypi4b)
            sudo apt-get update && sudo apt-get install -y qemu-system-aarch64
          ;;
          *)
            echo "Unsupported SDK: ${{ inputs.sdk }}"
            exit 1
          ;;
        esac
      shell: bash

    - name: Run VxWorks
    id: run-vxworks
    run: |
      $QEMU_RUN
    shell: bash
